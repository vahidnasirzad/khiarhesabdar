{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/vahidnasirzad/my-accounting-app/lib/prisma.ts"],"sourcesContent":["// lib/prisma.ts\n\nimport { PrismaClient } from '@prisma/client';\n\n// Use a global variable to keep a single instance of PrismaClient \n// across hot reloads in development.\nconst globalForPrisma = global as unknown as {\n  prisma: PrismaClient | undefined;\n};\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient();\n\nif (process.env.NODE_ENV !== 'production') {\n  globalForPrisma.prisma = prisma;\n}"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAEhB;;AAEA,mEAAmE;AACnE,qCAAqC;AACrC,MAAM;AAIC,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6IAAY;AAEhE,wCAA2C;IACzC,gBAAgB,MAAM,GAAG;AAC3B","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/vahidnasirzad/my-accounting-app/lib/actions.js"],"sourcesContent":["// lib/actions.js\n'use server';\nimport { prisma } from './prisma';\nimport { revalidatePath } from 'next/cache';\n\n/**\n * Forces Next.js to re-fetch data for the invoices listing page \n * by clearing the static cache for that path.\n */\nexport async function revalidateInvoices() {\n  // This is the path of the Server Component we want to re-run\n  revalidatePath('/invoices'); \n}\n\n// --- NEW: Delete Invoice Server Action ---\nexport async function deleteInvoice(id) {\n  try {\n      await prisma.invoice.delete({\n          where: {\n              id: id,\n          },\n      });\n\n      // Revalidate the list page to show the deletion instantly\n      revalidatePath('/invoices'); \n      \n      return { success: true, message: 'ŸÅÿß⁄©ÿ™Ÿàÿ± ÿ®ÿß ŸÖŸàŸÅŸÇ€åÿ™ ÿ≠ÿ∞ŸÅ ÿ¥ÿØ.' };\n  } catch (error) {\n      console.error('Error deleting invoice:', error);\n      return { success: false, message: 'ÿÆÿ∑ÿß ÿØÿ± ÿ≠ÿ∞ŸÅ ŸÅÿß⁄©ÿ™Ÿàÿ±.' };\n  }\n}"],"names":[],"mappings":"AAAA,iBAAiB;;;;;;;;;AAEjB;AACA;;;;;;AAMO,eAAe;IACpB,6DAA6D;IAC7D,IAAA,+IAAc,EAAC;AACjB;AAGO,eAAe,cAAc,EAAE;IACpC,IAAI;QACA,MAAM,uHAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YACxB,OAAO;gBACH,IAAI;YACR;QACJ;QAEA,0DAA0D;QAC1D,IAAA,+IAAc,EAAC;QAEf,OAAO;YAAE,SAAS;YAAM,SAAS;QAA2B;IAChE,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO;YAAE,SAAS;YAAO,SAAS;QAAqB;IAC3D;AACF;;;IAtBsB;IAMA;;AANA,+OAAA;AAMA,+OAAA","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///Users/vahidnasirzad/my-accounting-app/.next-internal/server/app/invoices/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {revalidateInvoices as '0025615dfe68c561327a3a27ecf04117bebb03270b'} from 'ACTIONS_MODULE0'\nexport {deleteInvoice as '40936b9bd607da1c0a99901b701b1e3c9d21b1cc25'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///Users/vahidnasirzad/my-accounting-app/app/invoices/InvoicesClient.js/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/invoices/InvoicesClient.js <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/invoices/InvoicesClient.js <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///Users/vahidnasirzad/my-accounting-app/app/invoices/InvoicesClient.js/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/invoices/InvoicesClient.js from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/invoices/InvoicesClient.js\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///Users/vahidnasirzad/my-accounting-app/app/invoices/page.js"],"sourcesContent":["// app/invoices/page.js\nimport moment from 'moment-jalaali'; \nimport { prisma } from '../../lib/prisma'; // üö® VERIFY PATH\nimport InvoicesClient from './InvoicesClient'; \nimport { unstable_noStore as noStore } from 'next/cache'; // Optional: Use if revalidatePath is too slow\n\nasync function getInvoices() {\n  // If you are NOT using revalidatePath, you can uncomment noStore() to always fetch fresh data.\n  // noStore(); \n  try {\n    const rows = await prisma.invoice.findMany({\n      orderBy: [\n        { date: 'desc' }, // Sort by date descending\n        { id: 'desc' },   // Use ID for stable ordering\n      ],\n    });\n    \n    // Process and format data for the client\n    const invoices = rows.map(row => {\n        const dateObj = row.date instanceof Date ? row.date : new Date(row.date);\n\n        return {\n            ...row,\n            // Convert standard Date object to Jalaali string\n            date: moment(dateObj).format('jYYYY/jMM/jDD'), \n            // Ensure amount is a string for client display\n            amount: String(row.amount), \n        };\n    });\n\n    return invoices; \n  } catch (err) {\n    console.error('Prisma Fetch Error:', err); \n    throw new Error('Failed to fetch initial invoices from the database.'); \n  }\n}\n\n// Main Server Component: This is the entry point for the /invoices route\nexport default async function InvoicesPage() {\n  const invoices = await getInvoices();\n  \n  // Pass the initial, formatted data to the Client Component\n  return (\n    <InvoicesClient initialInvoices={invoices} />\n  );\n}"],"names":[],"mappings":"AAAA,uBAAuB;;;;;;AACvB;AACA,+LAA2C,iBAAiB;AAC5D;AACA,4NAA0D,8CAA8C;;;;;;AAExG,eAAe;IACb,+FAA+F;IAC/F,cAAc;IACd,IAAI;QACF,MAAM,OAAO,MAAM,uHAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;YACzC,SAAS;gBACP;oBAAE,MAAM;gBAAO;gBACf;oBAAE,IAAI;gBAAO;aACd;QACH;QAEA,yCAAyC;QACzC,MAAM,WAAW,KAAK,GAAG,CAAC,CAAA;YACtB,MAAM,UAAU,IAAI,IAAI,YAAY,OAAO,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,IAAI;YAEvE,OAAO;gBACH,GAAG,GAAG;gBACN,iDAAiD;gBACjD,MAAM,IAAA,qJAAM,EAAC,SAAS,MAAM,CAAC;gBAC7B,+CAA+C;gBAC/C,QAAQ,OAAO,IAAI,MAAM;YAC7B;QACJ;QAEA,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,uBAAuB;QACrC,MAAM,IAAI,MAAM;IAClB;AACF;AAGe,eAAe;IAC5B,MAAM,WAAW,MAAM;IAEvB,2DAA2D;IAC3D,qBACE,8OAAC,4IAAc;QAAC,iBAAiB;;;;;;AAErC","debugId":null}}]
}